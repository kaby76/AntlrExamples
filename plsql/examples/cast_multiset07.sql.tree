(sql_script (unit_statement (data_manipulation_language_statements (select_statement (select_only_statement (subquery (subquery_basic_elements (query_block select (selected_list (select_list_elements (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a3") . (id_expression "r_id")))))))))))))) (column_alias (identifier (id_expression "r_id"))))) (from_clause from (table_ref_list (table_ref (table_ref_aux (table_ref_aux_internal (dml_table_expression_clause (tableview_name (identifier (id_expression "pe"))))) (table_alias (identifier (id_expression "a3"))))) , (table_ref (table_ref_aux (table_ref_aux_internal (dml_table_expression_clause (tableview_name (identifier (id_expression "me"))))) (table_alias (identifier (id_expression "a2"))))))) (where_clause where (expression (logical_expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a3") . (id_expression "m_id")))))))))) (relational_operator =) (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a2") . (id_expression "m_id")))))))))))))) and (logical_expression (unary_logical_expression (multiset_expression (relational_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a2") . (id_expression "mi_t")))))))))) (relational_operator =) (relational_expression (compound_expression (concatenation (model_expression (unary_expression (quantified_expression any ( (select_only_statement (subquery (subquery_basic_elements ( (subquery (subquery_basic_elements ( (subquery (subquery_basic_elements (query_block select (selected_list (select_list_elements (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (general_element (general_element_part (id_expression "a4") . (id_expression "sys$") . (id_expression "id"))))))))))))))) (from_clause from (table_ref_list (table_ref (table_ref_aux (table_ref_aux_internal (dml_table_expression_clause (table_collection_expression the ( (subquery (subquery_basic_elements (query_block select (selected_list (select_list_elements (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (general_element (general_element_part (id_expression "qa") . (id_expression "u_pkg") . (id_expression "getchartable") (function_argument ( (argument (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (general_element (general_element_part (id_expression "qa") . (id_expression "u_pkg") . (id_expression "glist") (function_argument ( (argument (expression (cursor_expression cursor ( (subquery (subquery_basic_elements (query_block select (selected_list (select_list_elements (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (general_element (general_element_part (id_expression "qa") . (id_expression "u_pkg") . (id_expression "glist") (function_argument ( (argument (expression (cursor_expression cursor ( (subquery (subquery_basic_elements (query_block select (selected_list (select_list_elements (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a6") . (id_expression "mi_t")))))))))))))) (column_alias (identifier (id_expression "mi_t"))))) (from_clause from (table_ref_list (table_ref (table_ref_aux (table_ref_aux_internal (dml_table_expression_clause (tableview_name (identifier (id_expression "me"))))) (table_alias (identifier (id_expression "a6"))))))) (hierarchical_query_clause connect by (condition (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a6") . (id_expression "mi_uid")))))))))) (relational_operator =) (relational_expression (compound_expression (concatenation (model_expression (unary_expression prior (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a6") . (id_expression "mi_id"))))))))))))))))) (start_part start with (condition (expression (logical_expression (unary_logical_expression (multiset_expression (relational_expression (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (constant (quoted_string (variable_name (id_expression "a6") . (id_expression "mi_t")))))))))) (relational_operator =) (relational_expression (compound_expression (concatenation (model_expression (unary_expression (atom (bind_variable :b1)))))))))))))))))) )))) )))))))))))))) (column_alias (identifier (id_expression "lst"))))) (from_clause from (table_ref_list (table_ref (table_ref_aux (table_ref_aux_internal (dml_table_expression_clause (tableview_name (identifier (id_expression "sys")) . (id_expression "dual")))) (table_alias (identifier (id_expression "a5")))))))))) )))) ))))))))))))))) )))))))))))))))) (from_clause from (table_ref_list (table_ref (table_ref_aux (table_ref_aux_internal (dml_table_expression_clause (tableview_name (identifier (id_expression (regular_id dual))))))))))))) )))) (table_alias (identifier (id_expression "a4")))))))))) ))) )))) ))))))))))))))))))))) <EOF>)